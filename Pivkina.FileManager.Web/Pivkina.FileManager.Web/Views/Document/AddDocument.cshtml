@model Pivkina.FileManager.Web.Models.Document
@using System.Configuration

@{
    ViewBag.Title = "Добавление документа";

    var path = Server.MapPath(ConfigurationManager.AppSettings["FilePath"]);
}

<h2>Добавление документа</h2>


@using (Html.BeginForm("AddDocument", "Document", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="Name" name="name">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BinaryFile, htmlAttributes: new { @class = "control-label col-md-2" })            
            <div class="col-md-10">
                @if (Model != null && string.IsNullOrEmpty(Model.BinaryFile))
    {
            <a target="_blank" href="http://localhost/@path\@Model.BinaryFile" download="@Model.Name.Trim()">@Model.Name</a>
}
                @Html.TextBox("file", null, new { type = "file", @class = "file" })
            </div>     
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
